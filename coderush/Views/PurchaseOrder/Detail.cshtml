@model coderush.Models.PurchaseOrder

@{
    ViewData["Title"] = "Purchase Order Detail";

    ViewBag.HelpTitle = ViewData["Title"];
    ViewBag.HelpMessage1 = "";
    ViewBag.HelpMessage2 = "";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <div class="col-lg-3">@Html.DisplayNameFor(model => model.PurchaseOrderName)</div>
                                <div class="col-lg-9"><input type="text" id="PurchaseOrderName" value="@Model.PurchaseOrderName" /></div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-3">@Html.DisplayNameFor(model => model.BranchId)</div>
                                <div class="col-lg-9"><input type="text" id="BranchId" /></div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-3">@Html.DisplayNameFor(model => model.VendorId)</div>
                                <div class="col-lg-9"><input type="text" id="VendorId" /></div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <div class="col-lg-3">@Html.DisplayNameFor(model => model.OrderDate)</div>
                                <div class="col-lg-9"><input type="text" id="OrderDate" value="@Model.OrderDate.Date.ToLocalTime().ToShortDateString()" /></div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-3">@Html.DisplayNameFor(model => model.DeliveryDate)</div>
                                <div class="col-lg-9"><input type="text" id="DeliveryDate" value="@Model.DeliveryDate.Date.ToLocalTime().ToShortDateString()" /></div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-3">@Html.DisplayNameFor(model => model.CurrencyId)</div>
                                <div class="col-lg-9"><input type="text" id="CurrencyId" /></div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-3">@Html.DisplayNameFor(model => model.PurchaseTypeId)</div>
                                <div class="col-lg-9"><input type="text" id="PurchaseTypeId" /></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        
        <div class="box">
            <div class="box-body">

                <div class="row">
                    <div class="col-lg-12">

                        <div id="Grid"></div>
                    </div>
                </div>
                <div class="row">
                    <br/>
                </div>
                <div class="row" id="SummaryArea" style="display:none">
                    <div class="col-lg-8">
                        <div class="form-group">
                            <div class="col-lg-3">@Html.DisplayNameFor(model => model.Remarks)</div>
                            <div class="col-lg-9"><input class="form-control" value="@Model.Remarks" disabled /></div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group">
                            <div class="col-lg-3">@Html.DisplayNameFor(model => model.Amount)</div>
                            <div class="col-lg-9"><input class="form-control" id="Amount" name="Amount" value="@Model.Amount.ToString("n2")" disabled /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3">@Html.DisplayNameFor(model => model.Discount)</div>
                            <div class="col-lg-9"><input class="form-control" id="Discount" name="Discount" value="@Model.Discount.ToString("n2")" disabled /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3">@Html.DisplayNameFor(model => model.SubTotal)</div>
                            <div class="col-lg-9"><input class="form-control" id="SubTotal" name="SubTotal" value="@Model.SubTotal.ToString("n2")" disabled /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3">@Html.DisplayNameFor(model => model.Tax)</div>
                            <div class="col-lg-9"><input class="form-control" id="Tax" name="Tax" value="@Model.Tax.ToString("n2")" disabled /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3">@Html.DisplayNameFor(model => model.Freight)</div>
                            <div class="col-lg-9"><input class="form-control" id="Freight" name="Freight" value="@Model.Freight.ToString("n2")" disabled /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3">@Html.DisplayNameFor(model => model.Total)</div>
                            <div class="col-lg-9"><input class="form-control" id="Total" name="Total" value="@Model.Total.ToString("n2")" disabled /></div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="box-footer">
                <div class="row">
                    <div class="col-lg-6">
                        <a href="/PurchaseOrder/Index" class="btn btn-primary">Back</a>
                    </div>
                    <div class="col-lg-6">
                        <a href="/PurchaseOrder/Print/@Model.PurchaseOrderId" class="btn btn-warning pull-right" target="_blank"><i class="fa fa-print"></i> Print Order</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->




@section Styles{

}

@section Scripts{

    <script type="text/javascript">
        $(function () {
            var dataManager = ej.DataManager({
                url: "/api/PurchaseOrderLine",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "PurchaseOrderId": @Model.PurchaseOrderId}],
                offline: true,
            });

            var dataManagerProduct = ej.DataManager({
                url: "/api/Product",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPurchaseOrder = ej.DataManager({
                url: "/api/PurchaseOrder",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerBranch = ej.DataManager({
                url: "/api/Branch",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerVendor = ej.DataManager({
                url: "/api/Vendor",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerCurrency = ej.DataManager({
                url: "/api/Currency",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPurchaseType = ej.DataManager({
                url: "/api/PurchaseType",
                adaptor: new ej.WebApiAdaptor()
            });

            $('#PurchaseOrderName').ejMaskEdit({
                inputMode: 'Text',
                enabled: false,
                width: 200,
            });

            $('#OrderDate').ejMaskEdit({
                inputMode: 'Text',
                enabled: false,
                width: 200,
            });

            $('#DeliveryDate').ejMaskEdit({
                inputMode: 'Text',
                enabled: false,
                width: 200,
            });

            $('#BranchId').ejDropDownList({
                dataSource: dataManagerBranch,
                fields: { id: 'BranchId', text: 'BranchName', value: 'BranchId' },
                value: @Model.BranchId,
                enabled: false,
                width: 200,
            });

            $('#VendorId').ejDropDownList({
                dataSource: dataManagerVendor,
                fields: { id: 'VendorId', text: 'VendorName', value: 'VendorId' },
                value: @Model.VendorId,
                enabled: false,
                width: 200,
            });

            $('#CurrencyId').ejDropDownList({
                dataSource: dataManagerCurrency,
                 fields: { id: 'CurrencyId', text: 'CurrencyName', value: 'CurrencyId' },
                value: @Model.CurrencyId,
                enabled: false,
                width: 200,
            });

            $('#PurchaseTypeId').ejDropDownList({
                dataSource: dataManagerPurchaseType,
                fields: { id: 'PurchaseTypeId', text: 'PurchaseTypeName', value: 'PurchaseTypeId' },
                value: @Model.PurchaseTypeId,
                enabled: false,
                width: 200,
            });

            renderSummaryAreaControl();

            dataManager.ready.done(function (e) {
                
                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/PurchaseOrderLine/Insert",
                        updateUrl: "/api/PurchaseOrderLine/Update",
                        removeUrl: "/api/PurchaseOrderLine/Remove",
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,

                    },
                    allowPaging: true,
                    columns: [
                        { field: "PurchaseOrderLineId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "PurchaseOrderId", headerText: 'PO#', defaultValue: @Model.PurchaseOrderId, foreignKeyField: "PurchaseOrderId", foreignKeyValue: "PurchaseOrderName", dataSource: dataManagerPurchaseOrder, visible: false },
                        { field: "ProductId", headerText: 'Product', foreignKeyField: "ProductId", foreignKeyValue: "ProductName", dataSource: dataManagerProduct },
                        { field: "Description", headerText: 'Description' },
                        { field: "Quantity", headerText: 'Qty', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                        { field: "Price", headerText: 'Price', defaultValue: 0, editType: "numericedit", format: "{0:n2}" },
                        { field: "Amount", headerText: 'Amount', defaultValue: 0, allowEditing: false, editType: "numericedit", format: "{0:n2}" },
                        { field: "DiscountPercentage", headerText: 'Disc %', defaultValue: 0, editType: "numericedit", format: "{0:n2}" },
                        { field: "DiscountAmount", headerText: 'Disc Amt', defaultValue: 0, visible: false, editType: "numericedit", format: "{0:n2}" },
                        { field: "SubTotal", headerText: 'SubTotal', defaultValue: 0, allowEditing: false, editType: "numericedit", format: "{0:n2}" },
                        { field: "TaxPercentage", headerText: 'Tax %', defaultValue: 0, editType: "numericedit", format: "{0:n2}" },
                        { field: "TaxAmount", headerText: 'Tax Amt', defaultValue: 0, visible: false, editType: "numericedit", format: "{0:n2}" },
                        { field: "Total", headerText: 'Total', defaultValue: 0, allowEditing: false, editType: "numericedit", format: "{0:n2}" },
                    ],
                    actionComplete: "complete",
                });
            });
            
        });

        function complete(args) {
            gridActionNotification(args);

            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
            if (args.requestType == 'save' || args.requestType == 'delete') {
                RewriteTotal(args.data.PurchaseOrderId);
            }
            if (args.requestType == 'beginedit' || args.requestType == 'add') {
                $("#GridProductId").ejDropDownList({ change: "DdlProductChange" });
            }

            $('#SummaryArea').css('display', 'block');
        }

        function DdlProductChange(e) {
            $.ajax({
                url: "/api/Product/GetById/" + e.selectedValue,
                type: "GET",
                success: function (data) {
                    $("#GridPrice").ejNumericTextbox({ value: data.DefaultSellingPrice });
                    $("#GridDescription").ejMaskEdit({ value: data.Description });
                }
            });
        }

        function RewriteTotal(purchaseOrderId) {
            $.ajax({
                type: 'GET',
                url: '/api/PurchaseOrder/GetById/' + purchaseOrderId,
                success: function (data) {
                    
                    $('#Tax').ejNumericTextbox({ value: data.Tax });
                    $('#SubTotal').ejNumericTextbox({ value: data.SubTotal });
                    $('#Discount').ejNumericTextbox({ value: data.Discount });
                    $('#Freight').ejNumericTextbox({ value: data.Freight });
                    $('#Total').ejNumericTextbox({ value: data.Total });
                    $('#Amount').ejNumericTextbox({ value: data.Amount });           

                }
            });
        }

        function renderSummaryAreaControl() {
            $("#Tax").ejNumericTextbox({ format: '{0:n2}', decimalPlaces: 2 });
            $("#SubTotal").ejNumericTextbox({ format: '{0:n2}', decimalPlaces: 2 });
            $("#Discount").ejNumericTextbox({ format: '{0:n2}', decimalPlaces: 2 });
            $("#Freight").ejNumericTextbox({ format: '{0:n2}', decimalPlaces: 2 });
            $("#Total").ejNumericTextbox({ format: '{0:n2}', decimalPlaces: 2 });
            $("#Amount").ejNumericTextbox({ format: '{0:n2}', decimalPlaces: 2 });
        }



    </script>
}


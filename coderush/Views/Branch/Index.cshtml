
@{
    ViewData["Title"] = "Branch";

    ViewBag.HelpTitle = ViewData["Title"];
    ViewBag.HelpMessage1 = "This is the place where you can create your company branch. You can have as many branch as you want.";
    ViewBag.HelpMessage2 = "";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title text-primary"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div id="Grid"></div>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">

            </div>
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<script id="templateForm" type="text/template">
    <input hidden id="BranchId" name="BranchId" value="{{:BranchId}}" />
    <table cellspacing="10">
        <tr>
            <td>
                Branch Name
            </td>
            <td colspan="3">
                <input id="BranchName" name="BranchName" value="{{:BranchName}}" />
            </td>
        </tr>
        <tr>
            <td>
                Description
            </td>
            <td colspan="3">
                <input id="Description" name="Description" value="{{:Description}}" />
            </td>
        </tr>
        <tr>
            <td>
                Contact Person
            </td>
            <td colspan="3">
                <input id="ContactPerson" name="ContactPerson" value="{{:ContactPerson}}" />
            </td>
        </tr>
        <tr>
            <td>
                Address
            </td>
            <td colspan="3">
                <input id="Address" name="Address" value="{{:Address}}" />
            </td>
        </tr>
        <tr>
            <td>
                City
            </td>
            <td>
                <input id="City" name="City" value="{{:City}}" />
            </td>
            <td>
                State
            </td>
            <td>
                <input id="State" name="State" value="{{:State}}" />
            </td>
        </tr>
        <tr>
            <td>
                ZipCode
            </td>
            <td>
                <input id="ZipCode" name="ZipCode" value="{{:ZipCode}}" />
            </td>
            <td>
                Phone
            </td>
            <td>
                <input id="Phone" name="Phone" value="{{:Phone}}" />
            </td>
        </tr>
        <tr>
            <td>
                Email
            </td>
            <td>
                <input id="Email" name="Email" value="{{:Email}}" />
            </td>
            <td>
                Currency
            </td>
            <td>
                <input id="CurrencyId" name="CurrencyId" value="{{:CurrencyId}}" />
            </td>
        </tr>
    </table>
</script>


@section Styles{

}

@section Scripts{

    <script type="text/javascript">

        var dataManagerCurrency;

        $(function () {

            bindDataFromWebApi();

            var dataManager = ej.DataManager({
                url: "/api/Branch",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

         

            dataManager.ready.done(function (e) {
                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/Branch/Insert",
                        updateUrl: "/api/Branch/Update",
                        removeUrl: "/api/Branch/Remove",
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel", "search", "printGrid"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,
                        editMode: "dialogtemplate",
                        dialogEditorTemplateID: "#templateForm",
                    },
                    isResponsive: true,
                    enableResponsiveRow: true,
                    allowSorting: true,
                    allowSearching: true,
                    allowFiltering: true,
                    filterSettings: {
                        filterType: "excel",
                        maxFilterChoices: 100,
                        enableCaseSensitivity: false
                    },
                    allowPaging: true,
                    pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.CurrentPage },
                    columns: [
                        { field: "BranchId", type: 'number', headerText: 'Branch Id', defaultValue: 0, isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "BranchName", type: 'string', headerText: 'Branch Name', validationRules: { required: true } },
                        { field: "Description", type: 'string', headerText: 'Description', visible: false },
                        { field: "Address", type: 'string', headerText: 'Address', validationRules: { required: true } },
                        { field: "City", type: 'string', headerText: 'City', },
                        { field: "CurrencyId", type: 'number', headerText: 'Currency', visible: false, foreignKeyField: "CurrencyId", foreignKeyValue: "CurrencyName", dataSource: dataManagerCurrency, validationRules: { required: true } },
                        { field: "State", type: 'string', headerText: 'State', visible: false},
                        { field: "ZipCode", type: 'string', headerText: 'ZipCode', visible: false },
                        { field: "Phone", type: 'string', headerText: 'Phone', visible: false },
                        { field: "Email", type: 'string', headerText: 'Email', visible: false },
                        { field: "ContactPerson", type: 'string', headerText: 'CP', validationRules: { required: true }, visible: false},
                    ],
                    actionComplete: "complete",
                });

            });


        });

        function bindDataFromWebApi() {
            dataManagerCurrency = ej.DataManager({
                url: "/api/Currency",
                adaptor: new ej.WebApiAdaptor()
            });
        }

        function complete(args) {
            gridActionNotification(args);

            if (args.requestType == 'beginedit' || args.requestType == 'add') {

                bindDataFromWebApi();

                formatFormControl();
            }

            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
        }

        function formatFormControl() {
            $("#BranchName").ejMaskEdit({
                inputMode: 'Text',
                width: 410,
                validationMessage: { required: 'Branch Name is required.' }
            });
            $("#Description").ejMaskEdit({
                inputMode: 'Text',
                width: 410,
                validationRules: { required: true },
                validationMessage: { required: 'Description is required.' }
            });
            $("#Address").ejMaskEdit({
                inputMode: 'Text',
                width: 410,
                validationRules: { required: true },
                validationMessage: { required: 'Address is required.' }
            });
            $("#ContactPerson").ejMaskEdit({
                inputMode: 'Text',
                width: 410,
                validationRules: { required: true },
                validationMessage: { required: 'Contact Person is required.' }
            });
            $("#City").ejMaskEdit({
                inputMode: 'Text',
            });
            $("#State").ejMaskEdit({
                inputMode: 'Text',
            });
            $("#ZipCode").ejMaskEdit({
                inputMode: 'Text',
            });
            $("#Phone").ejMaskEdit({
                inputMode: 'Text',
            });
            $("#Email").ejMaskEdit({
                inputMode: 'Text',
            });
            $("#CurrencyId").ejDropDownList({
                dataSource: dataManagerCurrency,
                fields: { value: "CurrencyId", text: "CurrencyCode" },
                validationRules: { required: true },
                validationMessage: { required: 'Currency Code is required.' }
            });
        }



    </script>
}

